* Using Structs to Structure Related Data
* Enums and Pattern Matching 
* Managing Growing Projects with Packages, Crates, and Modules
* Common Collections
* Error Handling 
* Generic Types, Traits, and Lifetimes
* Writing Automated Tests
* I/0 
* Functional Language Features: Iterators and Closures
* More about Cargo and Crates.io 
* Smart Pointers
* Concurrency 
* Object Oriented Programming in Rust 
* Patterns and Matching
* Advanced Features: Unsafe Rust, Advanced Traits, Types, Functions, Closures, and Macros
